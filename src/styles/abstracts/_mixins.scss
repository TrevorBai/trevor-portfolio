// Set background & text color
@mixin background-set($color) {
  background-color: $color;
  // color below doesn't apply to links, will only apply to text color
  color: text-color-set($color);
}

// Border Radius mixin
@mixin border-radius($radius: 5px) {
  //***********************************************
  border-radius: $radius;
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  -o-border-radius: $radius;
  //***********************************************
}

// Border box shadow mixin
@mixin border-box-shadow($border-color: $border-light) {
  border: 1px solid $border-color;
  box-shadow: 2px 2px 5px $border-color;
}

// CSS transition mixin
@mixin transition($property, $timing-function: ease-out, $duration: 0.2s) {
  //**********************************************************
  transition: #{$property} #{$duration} #{$timing-function};
  -webkit-transition: #{$property} #{$duration} #{$timing-function};
  -moz-transition: #{$property} #{$duration} #{$timing-function};
  -ms-transition: #{$property} #{$duration} #{$timing-function};
  -o-transition: #{$property} #{$duration} #{$timing-function};
  //**********************************************************
}

// CSS transition group mixin
@mixin transition-group($property-one, $property-two, $duration-one: 0.2s, $duration-two: 0.2s) {
  //**********************************************************
  transition: #{$property-one} #{$duration-one}, #{$property-two} #{$duration-two};
  -webkit-transition: #{$property-one} #{$duration-one}, #{$property-two} #{$duration-two};
  -moz-transition: #{$property-one} #{$duration-one}, #{$property-two} #{$duration-two};
  -ms-transition: #{$property-one} #{$duration-one}, #{$property-two} #{$duration-two};
  -o-transition: #{$property-one} #{$duration-one}, #{$property-two} #{$duration-two};
  //**********************************************************
}

// CSS transform mixin
@mixin transform($direction, $offset) {
  @if $direction == x {
    //**********************************************************
    transform: translateX($offset);
    -webkit-transform: translateX($offset);
    -moz-transform: translateX($offset);
    -ms-transform: translateX($offset);
    -o-transform: translateX($offset);
    //**********************************************************
  } @else if $direction == y {
    //**********************************************************
    transform: translateY($offset);
    -webkit-transform: translateY($offset);
    -moz-transform: translateY($offset);
    -ms-transform: translateY($offset);
    -o-transform: translateY($offset);
    //**********************************************************
  } @else {
    @error "#{$direction} has not defined.";
  }
}

// CSS scale transform mixin
@mixin scale-transform($scale-level) {
  //**********************************************************
  transform: scale($scale-level);
  -webkit-transform: scale($scale-level);
  -moz-transform: scale($scale-level);
  -ms-transform: scale($scale-level);
  -o-transform: scale($scale-level);
  //**********************************************************
}

// CSS animation mixin
@mixin slide-animation($name, $from, $to, $direction, $duration: 0.2s) {
  // name duration timing-function delay (iteration-count) direction
  animation: #{$name} #{$duration} ease-in-out 0s forwards;
  -webkit-animation: #{$name} #{$duration} ease-in-out 0s forwards;
  animation-fill-mode: backwards;

  @if $direction == left {
    @keyframes #{$name} {
      0% {
        opacity: 1;
        @include transform(x, -$from);
      }
      100% {
        opacity: 1;
        @include transform(x, $to);
      }
    }

    @-webkit-keyframes #{$name} {
      0% {
        opacity: 1;
        @include transform(x, -$from);
      }
      100% {
        opacity: 1;
        @include transform(x, $to);
      }
    }
  } @else {
    @error "Unknown direction #{$direction}.";
  }
}

